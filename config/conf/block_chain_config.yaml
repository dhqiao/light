name: "default-network"
description: "The network description"
version: 1.0.0
client:
  organization: member1.example.com
  logging:
    level: info
  cryptoconfig:
    path: service/crypto-config
    #path: /opt/app/fabric/cli/user/member1.example.com/Admin-peer0.member1.example.com
  credentialStore:
    path: /tmp/
    cryptoStore:
      path: /tmp/msp
  BCCSP:
    security:
     enabled: true
     default:
      provider: "SW"
     hashAlgorithm: "SHA2"
     softVerify: true
     level: 256
  tlsCerts:
    systemCertPool: true
    client:
      key:
        path: service/crypto-config/peerOrganizations/member1.example.com/users/Admin@member1.example.com/tls/client.key
        #path: /opt/app/fabric/cli/user/member1.example.com/Admin-peer0.member1.example.com/tls/client.key
      cert:
        path: service/crypto-config/peerOrganizations/member1.example.com/users/Admin@member1.example.com/tls/client.crt
        #path: /opt/app/fabric/cli/user/member1.example.com/Admin-peer0.member1.example.com/tls/client.crt
channels:
  mychannel:
    peers:
      peer0.member1.example.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true
    policies:
      queryChannelConfig:
        minResponses: 1
        maxTargets: 1
        retryOpts:
          attempts: 5
          initialBackoff: 500ms
          maxBackoff: 5s
          backoffFactor: 2.0
organizations:
  member1.example.com:
    mspid: peers.member1.example.com
    cryptoPath: peerOrganizations/member1.example.com/users/Admin@member1.example.com/msp/
    #cryptoPath: msp/
    peers:
      - peer0.member1.example.com
orderers:
  orderer0.member1.example.com:
    url: orderer0.member1.example.com:7050
    grpcOptions:
      ssl-target-name-override: orderer0.member1.example.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: false
    tlsCACerts:
      path: service/crypto-config/ordererOrganizations/member1.example.com/tlsca/tlsca.member1.example.com-cert.pem
      #path: /opt/app/fabric/cli/user/member1.example.com/Admin-peer0.member1.example.com/tlsca.member1.example.com-cert.pem
  orderer0.member1.example.com:
    url: orderer0.member1.example.com:7050
    grpcOptions:
      ssl-target-name-override: orderer0.member1.example.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: false
    tlsCACerts:
      path: service/crypto-config/ordererOrganizations/member1.example.com/tlsca/tlsca.member1.example.com-cert.pem
        #path: /opt/app/fabric/cli/user/member1.example.com/Admin-peer0.member1.example.com/tlsca.member1.example.com-cert.pem

peers:
  peer0.member1.example.com:
    url: peer0.member1.example.com:7051
    eventUrl: peer0.member1.example.com:7053
    grpcOptions:
      ssl-target-name-override: peer0.member1.example.com
      keep-alive-credentialStore: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: false
    tlsCACerts:
      path: service/crypto-config/peerOrganizations/member1.example.com/peers/peer0.member1.example.com/tls/ca.crt
      #path: /opt/app/fabric/cli/user/member1.example.com/Admin-peer0.member1.example.com/tls/ca.crt

entityMatchers:
  orderer:
    - pattern: (\w*)orderer0.member1.example.com(\w*)
      urlSubstitutionExp: orderer0.member1.example.com:7050
      sslTargetOverrideUrlSubstitutionExp: orderer0.member1.example.com
      mappedHost: orderer0.member1.example.com